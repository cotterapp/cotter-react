{"version":3,"file":"index.js","sources":["../src/auth/userContext.tsx","../src/auth/userProvider.tsx","../src/components/Loading/index.tsx","../src/auth/withAuthenticationRequired.tsx","../src/components/LoginForm/index.tsx"],"sourcesContent":["import Cotter from \"cotter\";\nimport { CotterAccessToken } from \"cotter-token-js\";\nimport { Config } from \"cotter/lib/binder\";\nimport User from \"cotter/lib/models/User\";\nimport { createContext } from \"react\";\n\n/**\n * Contains the authenticated state and authentication methods provided by the `useCotter` hook.\n */\nexport interface CotterContextInterface {\n  // Indicates if the current user is logged-in\n  isLoggedIn: boolean;\n  // Loading window object\n  isLoading: boolean;\n  // Cotter object\n  getCotter?: (config?: Config) => Cotter;\n  // Currently logged-in user\n  user?: User;\n  // Api Key ID\n  apiKeyID: string;\n  // Log out\n  logout: (logoutPath?: String) => Promise<void>;\n  // checkLoggedIn\n  checkLoggedIn: () => Promise<void>;\n  // getAccessToken\n  getAccessToken: () => Promise<CotterAccessToken | null>;\n}\n\nconst stub = (): never => {\n  throw new Error(\"You forgot to wrap your component in <CotterProvider>.\");\n};\n\n/**\n * The initial initialContext.\n */\nexport const initialContext: CotterContextInterface = {\n  isLoggedIn: false,\n  // In SSR mode the library will never check the session, so loading should be initialised as false\n  isLoading: typeof window !== \"undefined\",\n  logout: stub,\n  getCotter: stub,\n  getAccessToken: stub,\n  checkLoggedIn: stub,\n  apiKeyID: \"\",\n};\n\n/**\n * The Cotter Context\n */\nconst CotterContext = createContext<CotterContextInterface>(initialContext);\n\nexport default CotterContext;\n","import * as React from 'react'\nimport Cotter from \"cotter\";\nimport { Config } from \"cotter/lib/binder\";\nimport User from \"cotter/lib/models/User\";\nimport CotterContext from \"./userContext\";\nimport { CotterAccessToken } from \"cotter-token-js\";\n\nexport interface CotterProviderOptions extends Config {\n  /**\n   * The child nodes your Provider has wrapped\n   */\n  children?: React.ReactNode;\n  apiKeyID: string;\n}\n\n/**\n * ```jsx\n * <CotterProvider\n *   apiKeyID={YOUR_API_KEY_ID}\n * >\n *   <MyApp />\n * </CotterProvider>\n * ```\n *\n * Provides the CotterContext to its child components.\n */\nconst CotterProvider = (opts: CotterProviderOptions) => {\n  let { children, apiKeyID } = opts;\n  const [loggedIn, setloggedIn] = React.useState(false);\n  const [loading, setloading] = React.useState(true);\n  const [user, setuser] = React.useState<User | undefined>(undefined);\n\n  const getCotter = (config?: Config) => {\n    if (config && config.ApiKeyID) {\n      const c = new Cotter(config);\n      return c;\n    } else {\n      const c = new Cotter(apiKeyID);\n      return c;\n    }\n  };\n\n  React.useEffect(() => {\n    if (apiKeyID) {\n      checkLoggedIn();\n    }\n  }, [apiKeyID]);\n\n\n  const checkLoggedIn = async () => {\n    const cotter = getCotter();\n    const accessToken = await cotter.tokenHandler.getAccessToken();\n    if (accessToken && accessToken.token?.length > 0) {\n      setloggedIn(true);\n      const usr = cotter.getLoggedInUser();\n      setuser(usr);\n    } else {\n      setloggedIn(false);\n      setuser(undefined);\n    }\n    setloading(false);\n  };\n\n  const getAccessToken = async (): Promise<CotterAccessToken | null> => {\n    if (apiKeyID) {\n      const cotter = getCotter();\n      const accessToken = await cotter.tokenHandler.getAccessToken();\n      return accessToken;\n    } else {\n      throw new Error(\n        \"ApiKeyID is undefined, you may forgot to wrap your component in <CotterProvider>\"\n      );\n    }\n  };\n  const logout = async (): Promise<void> => {\n    if (apiKeyID) {\n      const cotter = getCotter();\n      await cotter.logOut();\n      setloggedIn(false);\n      setuser(undefined);\n    } else {\n      throw new Error(\n        \"ApiKeyID is undefined, you may forgot to wrap your component in <CotterProvider>\"\n      );\n    }\n  };\n\n  return (\n    <CotterContext.Provider\n      value={{\n        checkLoggedIn: checkLoggedIn,\n        isLoggedIn: loggedIn,\n        isLoading: typeof window === \"undefined\" || loading,\n        getCotter: getCotter,\n        user: user,\n        apiKeyID: apiKeyID,\n        logout: logout,\n        getAccessToken: getAccessToken,\n      }}\n    >\n      {children}\n    </CotterContext.Provider>\n  );\n};\n\nexport default CotterProvider;\n","import * as React from \"react\";\nimport \"./styles.scss\";\n\nfunction Loading({ loading }: { loading: boolean }) {\n  return (\n    <div className={`Cotter__loader-wrapper ${loading && \"Cotter__is-active\"}`}>\n      <div className=\"Cotter__loader Cotter__is-loading\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","import * as React from \"react\";\nimport Loading from \"../components/Loading\";\nimport CotterContext from \"./userContext\";\n\nconst defaultLoadingComponent = (): JSX.Element => <Loading loading={true} />;\n\nconst defaultLoginPagePath = \"/\";\n\n/**\n * Options for the withAuthenticationRequired\n */\nexport interface WithAuthenticationRequiredOptions {\n  /**\n   * ```js\n   * withAuthenticationRequired(Dashboard, {\n   *   loginPagePath: '/' // where to return after finish login\n   * })\n   * ```\n   *\n   * The path where the login page is located.\n   */\n  loginPagePath?: string | (() => string);\n  /**\n   * ```js\n   * withAuthenticationRequired(Profile, {\n   *   loadingComponent: () => <div>Loading... We're redirecting you to login.</div>\n   * })\n   * ```\n   *\n   * Show a component to the user while they're being redirected to the login page.\n   */\n  loadingComponent?: () => JSX.Element;\n}\n\nconst withAuthenticationRequired = <P extends object>(\n  Component: React.ComponentType<P>,\n  options: WithAuthenticationRequiredOptions\n) => (props: P) => {\n  const { isLoggedIn, isLoading } = React.useContext(CotterContext);\n  const {\n    loginPagePath = defaultLoginPagePath,\n    loadingComponent = defaultLoadingComponent,\n  } = options;\n\n  React.useEffect(() => {\n    if (!isLoading && !isLoggedIn) {\n      window.location.href =\n        typeof loginPagePath === \"function\" ? loginPagePath() : loginPagePath;\n    }\n  }, [isLoggedIn, isLoading]);\n\n  return !isLoggedIn ? loadingComponent : <Component {...props} />;\n};\n\nexport default withAuthenticationRequired;\n","import * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport CotterContext from \"../../auth/userContext\";\nimport {\n  AUTHENTICATION_METHOD,\n  IDENTIFIER_TYPE,\n  Styles,\n  AdditionalField,\n  VerifySuccess,\n  OnBeginHandler,\n  Config,\n} from \"cotter/lib/binder\";\n\ninterface LoginFormOptions {\n  type: IDENTIFIER_TYPE;\n  authMethod: AUTHENTICATION_METHOD;\n  onSuccess: (response: VerifySuccess) => void;\n  onError: (err: any) => void;\n  onBegin?: OnBeginHandler;\n  styles?: Styles;\n  additionalFields?: AdditionalField[];\n  width: number;\n  height: number;\n}\n\n/**\n * ```jsx\n * <LoginForm\n *    authMethod=\"MAGIC_LINK\"\n *    type=\"EMAIL\"\n *    onSuccess={() => navigate(\"/\")}\n *    onError={(err) => alert(err)}\n *    onBegin={(payload) => checkEmail(payload.identifier)}\n *    styles={{\n *      input_label: {color: \"#ffffff\"}\n *    }}\n *    additionalFields={[\n *      {\n *        name: \"name\",\n *        label: \"Full Name\",\n *        placeholder: \"Enter your full name\",\n *      },\n *    ]}\n *    width={300}\n *    height={300}\n * />;\n * ```\n *\n * Initiate Cotter's login form\n **/\n\nfunction LoginForm({\n  onBegin,\n  onSuccess,\n  onError,\n  styles,\n  additionalFields,\n  type = IDENTIFIER_TYPE.EMAIL,\n  authMethod = AUTHENTICATION_METHOD.MAGIC_LINK,\n  width = 300,\n  height = 300,\n}: LoginFormOptions) {\n  const [loaded, setloaded] = React.useState(false);\n  const [containerID, setcontainerID] = React.useState(\"\");\n  const { getCotter, apiKeyID, checkLoggedIn } = React.useContext(\n    CotterContext\n  );\n  React.useEffect(() => {\n    const randomID = Math.random().toString(36).substring(2, 15);\n    setcontainerID(`cotter-form-container-${randomID}`);\n  }, []);\n\n  React.useEffect(() => {\n    console.log(containerID);\n    if (getCotter && apiKeyID?.length >= 36 && containerID && !loaded) {\n      const config: Config = {\n        ApiKeyID: apiKeyID,\n        Type: type,\n      };\n      if (styles) {\n        config.Styles = styles;\n      }\n      if (additionalFields && additionalFields.length > 0) {\n        config.AdditionalFields = additionalFields;\n      }\n      config.ContainerID = containerID;\n      console.log(config);\n      const cotter = getCotter(config);\n\n      let cotterMethod =\n        authMethod === AUTHENTICATION_METHOD.MAGIC_LINK\n          ? cotter.signInWithLink()\n          : cotter.signInWithOTP();\n\n      if (onBegin) {\n        cotterMethod =\n          authMethod === AUTHENTICATION_METHOD.MAGIC_LINK\n            ? cotter.signInWithLink(onBegin)\n            : cotter.signInWithOTP(onBegin);\n      }\n\n      const cotterType =\n        type === IDENTIFIER_TYPE.EMAIL\n          ? cotterMethod.showEmailForm()\n          : cotterMethod.showPhoneForm();\n\n      setloaded(true);\n      cotterType\n        .then((resp) => {\n          checkLoggedIn();\n          onSuccess(resp);\n        })\n        .catch((err) => onError(err));\n    }\n  }, [\n    onSuccess,\n    onError,\n    authMethod,\n    type,\n    styles,\n    additionalFields,\n    containerID,\n    loaded,\n    onBegin,\n    getCotter,\n    apiKeyID,\n    checkLoggedIn,\n  ]);\n  return (\n    <>\n      {(!apiKeyID || apiKeyID.length < 36) && (\n        <div style={{ padding: \"0px 20px\" }}>\n          You're missing the API KEY ID, you need to pass it to{\" \"}\n          <code>CotterProvider</code>\n        </div>\n      )}\n      <div\n        id={containerID}\n        style={{ width: width, height: apiKeyID?.length >= 36 ? height : 10 }}\n      ></div>\n    </>\n  );\n}\n\nLoginForm.propTypes = {\n  onSuccess: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"],"names":["createContext","React.useState","Cotter","React.useEffect","React.createElement","React.useContext","IDENTIFIER_TYPE","AUTHENTICATION_METHOD","PropTypes.func"],"mappings":"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"}